#  Copyright (C) 2020-2021 Jacob Burroughs <maths22@gmail.com>
#                2020-2021 A. Semphris <semphris@protonmail.com>
#
#  Released under the Creative Commons Zero (CC0) license, available at:
#    Legal code: https://creativecommons.org/publicdomain/zero/1.0/legalcode
#    Information: https://creativecommons.org/share-your-work/public-domain/cc0/



# Note: Parts of this code were taken from the SuperTux project.
#         ~ Semphris (responsible for transfering and adapting the file)

name: main
on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request: {}
  workflow_dispatch:

jobs:
  build:

    strategy:
      fail-fast: true
      matrix:
        # TODO: re-add 'macos-latest' as an option here. MacOS has been
        #  temporarily disabled because the CI can't install harfbuzz correctly.
        os: [ubuntu-latest, macos-latest]
        compiler: [gcc, clang]
        build_type: [Debug, Release]
        server_only: [ON, OFF]
        exclude:
          - os: macos-latest
            compiler: gcc

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          # Fetch the whole tree so git describe works
          fetch-depth: 0
          submodules: true
      - name: Install linux dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update 
          sudo apt install -y build-essential cmake libbluetooth-dev libcurl4-gnutls-dev \
          libfreetype6-dev libharfbuzz-dev libjpeg-dev libogg-dev libopenal-dev \
          libpng-dev libsdl2-dev libvorbis-dev pkg-config zlib1g-dev clang
      - name: Install macos dependencies
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          cd /usr/local && wget https://github.com/supertuxkart/dependencies/releases/download/latest/dependencies-mac.tar.xz && \
          tar xf dependencies-mac.tar.xz
          brew update && brew install cmake macdylibbundler
      - name: Set compiler (gcc)
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.compiler == 'gcc' }}
        run: |
          echo "CXX=g++" >> $GITHUB_ENV
          echo "CC=gcc" >> $GITHUB_ENV
      - name: Set compiler (clang)
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.compiler == 'clang' }}
        run: |
          echo "CXX=clang++" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV
      - name: Set compiler (macos)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          # This ensures for now we use clang11
          # Clang12 runs into a bunch of fun with `include location '/usr/local/include' is unsafe for cross-compilation`
          # that we don't care about for now
          echo "CXX=clang++" >> $GITHUB_ENV
          echo "CC=clang" >> $GITHUB_ENV
      - name: Configure bulid (linux)
        if: ${{ matrix.os != 'macos-latest' }}
        env:
          BUILD_TYPE: ${{ matrix.build_type }}
          SERVER_ONLY: ${{ matrix.server_only }}
        run: |
          cmake --version
          $CXX --version
          mkdir "build"
          cd "build"
          cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSERVER_ONLY=$SERVER_ONLY -DCHECK_ASSETS=off -DBUILD_RECORDER=off;
      - name: Configure bulid (macos)
        if: ${{ matrix.os == 'macos-latest' }}
        env:
          BUILD_TYPE: ${{ matrix.build_type }}
          SERVER_ONLY: ${{ matrix.server_only }}
        run: |
          cmake --version
          $CXX --version
          mkdir "build"
          cd "build"
          CFLAGS="-mmacosx-version-min=10.9" CXXFLAGS="-mmacosx-version-min=10.9" LINKFLAGS="-mmacosx-version-min=10.9" LDFLAGS="-mmacosx-version-min=10.9" /usr/local/opt/cmake/bin/cmake .. -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DSERVER_ONLY=$SERVER_ONLY -DCHECK_ASSETS=off -DBUILD_RECORDER=off;
      - name: Build and install
        working-directory: build
        run: |
          make -j3 VERBOSE=1
          make install DESTDIR="/tmp/stk" VERBOSE=1
      - name: Packaging (macos)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          /usr/local/opt/dylibbundler/bin/dylibbundler -od -b -x ./bin/SuperTuxKart.app/Contents/MacOS/supertuxkart -d ./bin/SuperTuxKart.app/Contents/libs/ -p @executable_path/../libs/
          otool -L ./bin/SuperTuxKart.app/Contents/MacOS/supertuxkart
          otool -l ./bin/SuperTuxKart.app/Contents/MacOS/supertuxkart


